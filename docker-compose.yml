services:
  postgres:
    container_name: postgres
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_DB: ${POSTGRESQL_DATABASE}
    networks:
      - network
    env_file:
      - .env
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - network
  authorization-server:
    container_name: authorization-server
    image: authorization-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    networks:
      - network
    env_file:
      - .env
  email-service:
    container_name: email-service
    image: email-service
    networks:
      - network
    env_file:
      - .env
  products-service:
    container_name: products-service
    image: products-service
    networks:
      - network
    env_file:
      - .env
  gateway:
    container_name: gateway
    image: gateway
    depends_on:
      authorization-server:
        condition: service_healthy
    ports:
      - "9090:8080"
    networks:
      - network
    env_file:
      - .env

networks:
  network:
    name: "molt_network"